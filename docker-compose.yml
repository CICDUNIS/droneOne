version: "3.8"

services:
  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    command: http drone-server:80
    ports:
      - "4040:4040"
    networks:
      - local-cicd-net
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN:?Please set your NGROK_AUTHTOKEN}

  drone-server:
    image: drone/drone:latest
    container_name: droneOne-server 
    volumes:
      - drone-data:/data
    networks:
      - local-cicd-net
    environment:
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID:?Please set your DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET:?Please set your DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:?Please set your DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST:?Please set your DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=https
      - DRONE_USER_CREATE=username:${GITHUB_LEAD_DEV_USERNAME},admin:true

  drone-runner:
    image: drone/drone-runner-docker:latest
    container_name: droneOne-runner
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    networks:
      - local-cicd-net
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone-server
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:?Please set your DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=local-arm64-runner
      - DRONE_RUNNER_NETWORKS=local-cicd-net

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqubeDrone
    ports:
      - "8082:9000"
    networks:
      - local-cicd-net
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonar-conf:/opt/sonarqube/conf
      - sonar-data:/opt/sonarqube/data
      - sonar-extensions:/opt/sonarqube/extensions
      - sonar-logs:/opt/sonarqube/logs

  oracle-dev:
    image: gvenzl/oracle-free:latest
    container_name: oracle-dev
    ports:
      - "1521:1521"
    networks:
      - local-cicd-net
    environment:
      - ORACLE_PASSWORD=devpass
      - APP_USER=PHARMACY_LOCAL
      - APP_USER_PASSWORD=devpass
    volumes:
      - ./oracle-data-dev:/opt/oracle/oradata
      - ./db-scripts:/docker-entrypoint-initdb.d

  oracle-uat:
    image: gvenzl/oracle-free:latest
    container_name: oracle-uat
    ports:
      - "1522:1521"
    networks:
      - local-cicd-net
    environment:
      - ORACLE_PASSWORD=uatpass
      - APP_USER=PHARMACY_UAT
      - APP_USER_PASSWORD=uatpass
    volumes:
      - ./oracle-data-uat:/opt/oracle/oradata
      - ./db-scripts:/docker-entrypoint-initdb.d

  oracle-prod:
    image: gvenzl/oracle-free:latest
    container_name: oracle-prod
    ports:
      - "1523:1521"
    networks:
      - local-cicd-net
    environment:
      - ORACLE_PASSWORD=prodpass
      - APP_USER=PHARMACY_PROD
      - APP_USER_PASSWORD=prodpass
    volumes:
      - ./oracle-data-prod:/opt/oracle/oradata
      - ./db-scripts:/docker-entrypoint-initdb.d

  backend-dev:
    image: alpine:latest
    container_name: backend-dev
    command: "sleep infinity"
    networks:
      - local-cicd-net
    ports:
      - "9090:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle-dev:1521/FREEPDB1
      - SPRING_DATASOURCE_USERNAME=PHARMACY_LOCAL
      - SPRING_DATASOURCE_PASSWORD=devpass
      - APP_FRONTEND_URL=http://localhost:8080

  frontend-dev:
    image: alpine:latest
    container_name: frontend-dev
    command: "sleep infinity"
    networks:
      - local-cicd-net
    ports:
      - "8080:80"
    environment:
      - NGINX_PROXY_PASS=http://backend-dev:8080

  backend-uat:
    image: alpine:latest
    container_name: backend-uat
    command: "sleep infinity"
    networks:
      - local-cicd-net
    ports:
      - "9091:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle-uat:1521/FREEPDB1
      - SPRING_DATASOURCE_USERNAME=PHARMACY_UAT
      - SPRING_DATASOURCE_PASSWORD=uatpass
      - APP_FRONTEND_URL=http://localhost:8081

  frontend-uat:
    image: alpine:latest
    container_name: frontend-uat
    command: "sleep infinity"
    networks:
      - local-cicd-net
    ports:
      - "8081:80"
    environment:
      - NGINX_PROXY_PASS=http://backend-uat:8080

  backend-prod:
    image: alpine:latest
    container_name: backend-prod
    command: "sleep infinity"
    networks:
      - local-cicd-net
    ports:
      - "9092:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle-prod:1521/FREEPDB1
      - SPRING_DATASOURCE_USERNAME=PHARMACY_PROD
      - SPRING_DATASOURCE_PASSWORD=prodpass
      - APP_FRONTEND_URL=http://localhost:8083

  frontend-prod:
    image: alpine:latest
    container_name: frontend-prod
    command: "sleep infinity"
    networks:
      - local-cicd-net
    ports:
      - "8083:80"
    environment:
      - NGINX_PROXY_PASS=http://backend-prod:8080

volumes:
  drone-data:
  sonar-conf:
  sonar-data:
  sonar-extensions:
  sonar-logs:
  oracle-data-dev:
  oracle-data-uat:
  oracle-data-prod:

networks:
  local-cicd-net:
    driver: bridge
    name: local-cicd-net
