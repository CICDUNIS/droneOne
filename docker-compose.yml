version: "3.8"

services:
  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    command: http drone-server:80
    ports:
      - "4040:4040"
    networks:
      - local-cicd-net
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN:?Please set your NGROK_AUTHTOKEN}

  drone-server:
    image: drone/drone:latest
    container_name: droneOne-server
    volumes:
      - drone-data:/data
    networks:
      - local-cicd-net
    environment:
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID:?Please set your DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET:?Please set your DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:?Please set your DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST:?Please set your DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=https
      - DRONE_USER_CREATE=username:${GITHUB_LEAD_DEV_USERNAME},admin:true


  drone-runner:
    image: drone/drone-runner-docker:latest
    container_name: droneOne-runner
    depends_on:
      drone-server:
        condition: service_started
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    user: "0" 
    networks:
      - local-cicd-net
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone-server
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:?Please set your DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=local-arm64-runner

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqubeDrone
    ports:
      - "8082:9000"
    networks:
      - local-cicd-net
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonar-conf:/opt/sonarqube/conf       
      - sonar-data:/opt/sonarqube/data       
      - sonar-extensions:/opt/sonarqube/extensions 
      - sonar-logs:/opt/sonarqube/logs     

  oracle-dev:
    image: gvenzl/oracle-free:latest
    container_name: oracle-dev
    ports:
      - "1521:1521"
    networks:
      - local-cicd-net
    environment:
      - ORACLE_PASSWORD=devpass
      - APP_USER=PHARMACY_LOCAL
      - APP_USER_PASSWORD=devpass
    volumes:
      - ./oracle-data-dev:/opt/oracle/oradata
      - ./db-scripts:/docker-entrypoint-initdb.d
  
  oracle-uat:
    image: gvenzl/oracle-free:latest
    container_name: oracle-uat
    ports:
      - "1522:1521"
    networks:
      - local-cicd-net
    environment:
      - ORACLE_PASSWORD=uatpass
      - APP_USER=PHARMACY_UAT
      - APP_USER_PASSWORD=uatpass
    volumes:
      - ./oracle-data-uat:/opt/oracle/oradata
      - ./db-scripts:/docker-entrypoint-initdb.d
  
  oracle-prod:
    image: gvenzl/oracle-free:latest
    container_name: oracle-prod
    ports:
      - "1523:1521"
    networks:
      - local-cicd-net
    environment:
      - ORACLE_PASSWORD=prodpass
      - APP_USER=PHARMACY_PROD
      - APP_USER_PASSWORD=prodpass
    volumes:
      - ./oracle-data-prod:/opt/oracle/oradata
      - ./db-scripts:/docker-entrypoint-initdb.d
  
  backend-dev:
    image: alpine:latest
    command: "sleep infinity"
    restart: "no"
    container_name: backend-dev
    networks:
      - local-cicd-net
  
  frontend-dev:
    image: alpine:latest
    command: "sleep infinity"
    restart: "no"
    container_name: frontend-dev
    networks:
      - local-cicd-net
  
  backend-uat:
    image: alpine:latest
    command: "sleep infinity"
    restart: "no"
    container_name: backend-uat
    networks:
      - local-cicd-net
  
  frontend-uat:
    image: alpine:latest
    command: "sleep infinity"
    restart: "no"
    container_name: frontend-uat
    networks:
      - local-cicd-net
  
  backend-prod:
    image: alpine:latest
    command: "sleep infinity"
    restart: "no"
    container_name: backend-prod
    networks:
      - local-cicd-net
  
  frontend-prod:
    image: alpine:latest
    command: "sleep infinity"
    restart: "no"
    container_name: frontend-prod
    networks:
      - local-cicd-net

volumes:
  drone-data:
  sonar-conf:
  sonar-data:
  sonar-extensions:
  sonar-logs:
  oracle-data-dev:
  oracle-data-uat:
  oracle-data-prod:

networks:
  local-cicd-net:
    driver: bridge
    name: local-cicd-net
